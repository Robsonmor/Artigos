<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="7d85b48a-2fa8-424b-9efe-c2be9efccb49" name="Marcio@MARCIOALTHMANN 2011-05-15 18:09:31" runUser="marcioalthmann\Marcio" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="375b5ae3-10ff-4e6e-9cf9-e7685d5e9765">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Marcio_MARCIOALTHMANN 2011-05-15 18_09_31">
      <DeploymentItem filename="E:\Artigos\SingletonComIoC\packages\Castle.Windsor.2.5.3\lib\NET40\Castle.Windsor.dll" />
      <DeploymentItem filename="E:\Artigos\SingletonComIoC\packages\Castle.Core.2.5.2\lib\NET35\Castle.Core.dll" />
      <DeploymentItem filename="E:\Artigos\SingletonComIoC\packages\Ninject.2.2.1.4\lib\net40-Full\Ninject.dll" />
      <DeploymentItem filename="E:\Artigos\SingletonComIoC\packages\Unity.2.1.505.0\lib\NET35\Microsoft.Practices.Unity.dll" />
      <DeploymentItem filename="E:\Artigos\SingletonComIoC\packages\CommonServiceLocator.1.0\lib\NET35\Microsoft.Practices.ServiceLocation.dll" />
      <DeploymentItem filename="E:\Artigos\SingletonComIoC\packages\Unity.2.1.505.0\lib\NET35\Microsoft.Practices.Unity.Configuration.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2011-05-15T18:09:31.6484101-03:00" queuing="2011-05-15T18:09:31.6924126-03:00" start="2011-05-15T18:09:31.8144196-03:00" finish="2011-05-15T18:09:32.9834865-03:00" />
  <ResultSummary outcome="Failed">
    <Counters total="3" executed="3" error="0" failed="3" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" storage="e:\artigos\singletoncomioc\singletoncomioc\bin\debug\singletoncomioc.dll" id="cc9ee901-55ad-51e4-84fc-7a1b7f36772e">
      <Execution id="c6b063c4-990a-40f8-95ce-7b601a0b3c63" />
      <TestMethod codeBase="E:/Artigos/SingletonComIoC/SingletonComIoC/bin/Debug/SingletonComIoC.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="SingletonComIoC.TestesComWindsor, SingletonComIoC, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" />
    </UnitTest>
    <UnitTest name="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" storage="e:\artigos\singletoncomioc\singletoncomioc\bin\debug\singletoncomioc.dll" id="acfd28b4-e20b-9c96-091e-732603f4795e">
      <Execution id="b8648548-d535-4f7e-ba95-46cab341ff92" />
      <TestMethod codeBase="E:/Artigos/SingletonComIoC/SingletonComIoC/bin/Debug/SingletonComIoC.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="SingletonComIoC.TestesComNinject, SingletonComIoC, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" />
    </UnitTest>
    <UnitTest name="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" storage="e:\artigos\singletoncomioc\singletoncomioc\bin\debug\singletoncomioc.dll" id="c53a8c5a-a40d-8f42-f774-aabd65007b44">
      <Execution id="93be02ce-46ef-46af-bde4-e13045bf1c3c" />
      <TestMethod codeBase="E:/Artigos/SingletonComIoC/SingletonComIoC/bin/Debug/SingletonComIoC.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="SingletonComIoC.TestesComUnity, SingletonComIoC, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="acfd28b4-e20b-9c96-091e-732603f4795e" executionId="b8648548-d535-4f7e-ba95-46cab341ff92" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c53a8c5a-a40d-8f42-f774-aabd65007b44" executionId="93be02ce-46ef-46af-bde4-e13045bf1c3c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cc9ee901-55ad-51e4-84fc-7a1b7f36772e" executionId="c6b063c4-990a-40f8-95ce-7b601a0b3c63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="b8648548-d535-4f7e-ba95-46cab341ff92" testId="acfd28b4-e20b-9c96-091e-732603f4795e" testName="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" computerName="MARCIOALTHMANN" duration="00:00:00.5998000" startTime="2011-05-15T18:09:31.7464157-03:00" endTime="2011-05-15T18:09:32.6544676-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b8648548-d535-4f7e-ba95-46cab341ff92">
      <Output>
        <ErrorInfo>
          <Message>Test method SingletonComIoC.TestesComNinject.RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes threw exception: 
Ninject.ActivationException: Error activating Configuracoes using self-binding of Configuracoes
No constructor was available to create an instance of the implementation type.

Activation path:
  1) Request for Configuracoes

Suggestions:
  1) Ensure that the implementation type has a public constructor.
  2) If you have implemented the Singleton pattern, use a binding with InSingletonScope() instead.
</Message>
          <StackTrace>    at Ninject.Activation.Providers.StandardProvider.Create(IContext context) in c:\Projects\Ninject\Maintenance2.2\ninject\src\Ninject\Activation\Providers\StandardProvider.cs:line 77
   at Ninject.Activation.Context.Resolve() in c:\Projects\Ninject\Maintenance2.2\ninject\src\Ninject\Activation\Context.cs:line 157
   at Ninject.KernelBase.&lt;Resolve&gt;b__7(IContext context) in c:\Projects\Ninject\Maintenance2.2\ninject\src\Ninject\KernelBase.cs:line 375
   at System.Linq.Enumerable.&lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(TSource x)
   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()
   at System.Linq.Enumerable.&lt;CastIterator&gt;d__b1`1.MoveNext()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)
   at Ninject.ResolutionExtensions.Get[T](IResolutionRoot root, IParameter[] parameters) in c:\Projects\Ninject\Maintenance2.2\ninject\src\Ninject\Syntax\ResolutionExtensions.cs:line 37
   at SingletonComIoC.TestesComNinject.RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes() in E:\Artigos\SingletonComIoC\SingletonComIoC\TestesComNinject.cs:line 15
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="93be02ce-46ef-46af-bde4-e13045bf1c3c" testId="c53a8c5a-a40d-8f42-f774-aabd65007b44" testName="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" computerName="MARCIOALTHMANN" duration="00:00:00.1088272" startTime="2011-05-15T18:09:32.6574678-03:00" endTime="2011-05-15T18:09:32.7784747-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="93be02ce-46ef-46af-bde4-e13045bf1c3c">
      <Output>
        <ErrorInfo>
          <Message>Test method SingletonComIoC.TestesComUnity.RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes threw exception: 
Microsoft.Practices.Unity.ResolutionFailedException: Resolution of the dependency failed, type = "SingletonComIoC.Configuracoes", name = "(none)".
Exception occurred while: while resolving.
Exception is: InvalidOperationException - The type Configuracoes cannot be constructed. You must configure the container to supply this value.
-----------------------------------------------
At the time of the exception, the container was:

  Resolving SingletonComIoC.Configuracoes,(none)
 ---&gt; System.InvalidOperationException: The type Configuracoes cannot be constructed. You must configure the container to supply this value.</Message>
          <StackTrace>    at Microsoft.Practices.ObjectBuilder2.DynamicMethodConstructorStrategy.GuardTypeIsNonPrimitive(IBuilderContext context, SelectedConstructor selectedConstructor)
   at Microsoft.Practices.ObjectBuilder2.DynamicMethodConstructorStrategy.PreBuildUp(IBuilderContext context)
   at Microsoft.Practices.ObjectBuilder2.StrategyChain.ExecuteBuildUp(IBuilderContext context)
   at Microsoft.Practices.ObjectBuilder2.DynamicMethodBuildPlanCreatorPolicy.CreatePlan(IBuilderContext context, NamedTypeBuildKey buildKey)
   at Microsoft.Practices.ObjectBuilder2.BuildPlanStrategy.PreBuildUp(IBuilderContext context)
   at Microsoft.Practices.ObjectBuilder2.StrategyChain.ExecuteBuildUp(IBuilderContext context)
   at Microsoft.Practices.Unity.UnityContainer.DoBuildUp(Type t, Object existing, String name, IEnumerable`1 resolverOverrides)
 --- End of inner exception stack trace ---
    at Microsoft.Practices.Unity.UnityContainer.DoBuildUp(Type t, Object existing, String name, IEnumerable`1 resolverOverrides)
   at Microsoft.Practices.Unity.UnityContainer.Resolve(Type t, String name, ResolverOverride[] resolverOverrides)
   at Microsoft.Practices.Unity.UnityContainerExtensions.Resolve[T](IUnityContainer container, ResolverOverride[] overrides)
   at SingletonComIoC.TestesComUnity.RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes() in E:\Artigos\SingletonComIoC\SingletonComIoC\TestesComUnity.cs:line 19
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c6b063c4-990a-40f8-95ce-7b601a0b3c63" testId="cc9ee901-55ad-51e4-84fc-7a1b7f36772e" testName="RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes" computerName="MARCIOALTHMANN" duration="00:00:00.1521513" startTime="2011-05-15T18:09:32.7814749-03:00" endTime="2011-05-15T18:09:32.9444842-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c6b063c4-990a-40f8-95ce-7b601a0b3c63">
      <Output>
        <ErrorInfo>
          <Message>Test method SingletonComIoC.TestesComWindsor.RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes threw exception: 
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate SingletonComIoC.Configuracoes ---&gt; Castle.MicroKernel.ComponentActivator.ComponentActivatorException: Could not find a public constructor for type SingletonComIoC.Configuracoes. Windsor can not instantiate types that don't expose public constructors. To expose the type as a service add public constructor, or use custom component activator.</Message>
          <StackTrace>    at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, Type[] signature) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs:line 190
   at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, Object[] arguments, Type[] signature) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs:line 126
 --- End of inner exception stack trace ---
    at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, Object[] arguments, Type[] signature) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs:line 146
   at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs:line 92
   at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs:line 70
   at Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\AbstractComponentActivator.cs:line 75
   at Castle.MicroKernel.Lifestyle.SingletonLifestyleManager.Resolve(CreationContext context) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\Lifestyle\SingletonLifestyleManager.cs:line 48
   at Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultHandler.cs:line 61
   at Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context, Boolean instanceRequired) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\Handlers\AbstractHandler.cs:line 771
   at Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\Handlers\AbstractHandler.cs:line 369
   at Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs:line 899
   at Castle.MicroKernel.DefaultKernel.Resolve(Type service) in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel_Resolve.cs:line 160
   at Castle.Windsor.WindsorContainer.Resolve[T]() in e:\OSS.Code\Castle.Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs:line 872
   at SingletonComIoC.TestesComWindsor.RetornaAMesmaInstanciaDaClasseConfiguracoesQuandoSolicitadaDuasVezes() in E:\Artigos\SingletonComIoC\SingletonComIoC\TestesComWindsor.cs:line 22
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>